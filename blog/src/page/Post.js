import SideBar from '../component/SideBar';
import TopBar from '../component/TopBar';
import Content from '../component/Content';
import Footer from '../component/Footer';
import Comment from "../component/Comment";
import '@toast-ui/editor/dist/toastui-editor-viewer.css';
import { Viewer } from '@toast-ui/react-editor';

import 'prismjs/themes/prism.css';
import '@toast-ui/editor/dist/toastui-editor.css';
import '@toast-ui/editor-plugin-code-syntax-highlight/dist/toastui-editor-plugin-code-syntax-highlight.css';

export default function Post(props) {
  return (
    <>
      <SideBar activatedMenu="Post"/>
      <TopBar title="Post" searchResults={props.searchResults} setSearchResults={props.setSearchResults}/>
      <Content core={<PostContent/>} searchResults={props.searchResults} setSearchResults={props.setSearchResults}/>
      <Footer/>
    </>
  );
}

function PostContent() {
  const html = '<h2>Prerequisites</h2><p>Follow the instructions in the <a href="https://jekyllrb.com/docs/installation/">Jekyll Docs</a> to complete the installation of <code data-backticks="1">Ruby</code>, <code data-backticks="1">RubyGems</code>, <code data-backticks="1">Jekyll</code>, and <code data-backticks="1">Bundler</code>. In addition, <a href="https://git-scm.com/">Git</a> is also required to be installed.</p><h2>Installation</h2><div data-language="java" class="toastui-editor-ww-code-block-highlighting"><pre class="language-java"><code data-language="java" class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>\n' +
    '    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n' +
    '        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n' +
    '    <span class="token punctuation">}</span>\n' +
    '<span class="token punctuation">}</span></code></pre></div><h3>Creating a New Site</h3><p>There are two ways to create a new repository for this theme:</p><ul><li><p><strong><a href="#option-1-using-the-chirpy-starter">Using the Chirpy Starter</a></strong> - Easy to upgrade, isolates irrelevant project files so you can focus on writing.</p></li><li><p><strong><a href="#option-2-forking-on-github">Forking on GitHub</a></strong> - Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.</p></li></ul><h4>Option 1. Using the Chirpy Starter</h4><p>Create a new repository from the [<strong>Chirpy Starter</strong>][use-starter] and name it <code data-backticks="1">&lt;GH_USERNAME&gt;.github.io</code>, where <code data-backticks="1">GH_USERNAME</code> represents your GitHub username.</p><h4>Option 2. Forking on GitHub</h4><p><a href="https://github.com/cotes2020/jekyll-theme-chirpy/fork">Fork </a><strong><a href="https://github.com/cotes2020/jekyll-theme-chirpy/fork">Chirpy</a></strong> on GitHub and rename it to <code data-backticks="1">&lt;GH_USERNAME&gt;.github.io</code>. Please note that the default branch code is in development.  If you want the site to be stable, please switch to the [latest tag][latest-tag] and start writing.</p><p><br></p><p>And then execute:</p><div data-language="console" class="toastui-editor-ww-code-block-highlighting"><pre class="language-console"><code data-language="console" class="language-console">$ bash tools/init</code></pre></div><blockquote><p>If you don\'t want to deploy your site on GitHub Pages, append option <code data-backticks="1">--no-gh</code> at the end of the above command.</p><p>{: .prompt-info }</p></blockquote><p>The above command will:</p><ol><li><p>Remove the files in <code data-backticks="1">_posts</code>{: .filepath} from your repository.</p></li><li><p>If the option <code data-backticks="1">--no-gh</code> is provided, the directory <code data-backticks="1">.github</code>{: .filepath} will be deleted. Otherwise, set up the GitHub Action workflow by removing the extension <code data-backticks="1">.hook</code>{: .filepath} of <code data-backticks="1">.github/workflows/pages-deploy.yml.hook</code>{: .filepath}, and then remove the other files and directories in the folder <code data-backticks="1">.github</code>{: .filepath}.</p></li><li><p>Remove item <code data-backticks="1">Gemfile.lock</code> from <code data-backticks="1">.gitignore</code>{: .filepath}.</p></li><li><p>Create a new commit to save the changes automatically.</p></li></ol><h3>Installing Dependencies</h3><p>Before running for the first time, go to the root directory of your site, and install dependencies as follows:</p><div data-language="console" class="toastui-editor-ww-code-block-highlighting"><pre class="language-console"><code data-language="console" class="language-console">$ bundle</code></pre></div><h2>Usage</h2><h3>Configuration</h3><p>Update the variables of <code data-backticks="1">_config.yml</code>{: .filepath} as needed. Some of them are typical options:</p><ul><li><p><code data-backticks="1">url</code></p></li><li><p><code data-backticks="1">avatar</code></p></li><li><p><code data-backticks="1">timezone</code></p></li><li><p><code data-backticks="1">lang</code></p></li></ul><h3>Customizing Stylesheet</h3><p>If you need to customize the stylesheet, copy the theme\'s <code data-backticks="1">assets/css/style.scss</code>{: .filepath} to the same path on your Jekyll site, and then add the custom style at the end of it.</p><p><br></p><p>Starting with version <code data-backticks="1">4.1.0</code>, if you want to overwrite the SASS variables defined in <code data-backticks="1">_sass/addon/variables.scss</code>{: .filepath}, copy the main sass file <code data-backticks="1">_sass/jekyll-theme-chirpy.scss</code>{: .filepath} into the <code data-backticks="1">_sass</code>{: .filepath} directory in your site\'s source, then create a new file <code data-backticks="1">_sass/variables-hook.scss</code>{: .filepath} and assign new value.</p><h3>Customing Static Assets</h3><p>Static assets configuration was introduced in version <code data-backticks="1">5.1.0</code>. The CDN of the static assets is defined by file <code data-backticks="1">_data/assets/cross_origin.yml</code>{: .filepath }, and you can replace some of them according to the network conditions in the region where your website is published.</p><p><br></p><p>Also, if you\'d like to self-host the static assets, please refer to the <em><a href="https://github.com/cotes2020/chirpy-static-assets#readme">chirpy-static-assets</a></em>.</p><h3>Running Local Server</h3><p>You may want to preview the site contents before publishing, so just run it by:</p><div data-language="console" class="toastui-editor-ww-code-block-highlighting"><pre class="language-console"><code data-language="console" class="language-console">$ bundle exec jekyll s</code></pre></div><p>Or run the site on Docker with the following command:</p><div data-language="console" class="toastui-editor-ww-code-block-highlighting"><pre class="language-console"><code data-language="console" class="language-console">$ docker run -it --rm \\\n' +
    '    --volume="$PWD:/srv/jekyll" \\\n' +
    '    -p 4000:4000 jekyll/jekyll \\\n' +
    '    jekyll serve</code></pre></div><p>After a while, the local service will be published at <em><a href="http://127.0.0.1:4000">http://127.0.0.1:4000</a></em>.</p><h2>Deployment</h2><p>Before the deployment begins, check out the file <code data-backticks="1">_config.yml</code>{: .filepath} and make sure the <code data-backticks="1">url</code> is configured correctly. Furthermore, if you prefer the <strong><a href="https://help.github.com/en/github/working-with-github-pages/about-github-pages#types-of-github-pages-sites">project site</a></strong> and don\'t use a custom domain, or you want to visit your website with a base URL on a web server other than <strong>GitHub Pages</strong>, remember to change the <code data-backticks="1">baseurl</code> to your project name that starts with a slash, e.g, <code data-backticks="1">/project-name</code>.</p><p><br></p><p>Now you can choose ONE of the following methods to deploy your Jekyll site.</p><h3>Deploy by Using GitHub Actions</h3><p>Ensure your Jekyll site has the file <code data-backticks="1">.github/workflows/pages-deploy.yml</code>{: .filepath}. Otherwise, create a new one and fill in the contents of the [sample file][workflow], and the value of the <code data-backticks="1">on.push.branches</code> should be the same as your repo\'s default branch name. And then rename your repository to <code data-backticks="1">&lt;GH_USERNAME&gt;.github.io</code> on GitHub.</p><p><br></p><p>Furthermore, if you have committed <code data-backticks="1">Gemfile.lock</code>{: .filepath} to the repository and your local machine is not Linux, go the the root directory of your site and update the platform list:</p><div data-language="console" class="toastui-editor-ww-code-block-highlighting"><pre class="language-console"><code data-language="console" class="language-console">$ bundle lock --add-platform x86_64-linux</code></pre></div><p>Now publish your Jekyll site:</p><ol><li><p>Browse to your repository on GitHub. Select the tab <em>Settings</em>, then click <em>Pages</em> in the left navigation bar. Then, in the <strong>Source</strong> section (under <em>Build and deployment</em>), select [<strong>GitHub Actions</strong>][pages-workflow-src] from the dropdown menu.</p></li><li><p>Push any commit to remote to trigger the GitHub Actions workflow. In the <em>Actions</em> tab of your repository, you should see the workflow <em>Build and Deploy</em> running. Once the build is complete and successful, the site should be deployed automatically.</p></li><li><p>Visit your website at the address indicated by GitHub.</p></li></ol><h3>Manually Build and Deploy</h3><p>On self-hosted servers, you cannot enjoy the convenience of <strong>GitHub Actions</strong>. Therefore, you should build the site on your local machine and then upload the site files to the server.</p><p><br></p><p>Go to the root of the source project, and build your site as follows:</p><div data-language="console" class="toastui-editor-ww-code-block-highlighting"><pre class="language-console"><code data-language="console" class="language-console">$ JEKYLL_ENV=production bundle exec jekyll b</code></pre></div><p>Or build the site on Docker:</p><div data-language="console" class="toastui-editor-ww-code-block-highlighting"><pre class="language-console"><code data-language="console" class="language-console">$ docker run -it --rm \\\n' +
    '    --env JEKYLL_ENV=production \\\n' +
    '    --volume="$PWD:/srv/jekyll" \\\n' +
    '    jekyll/jekyll \\\n' +
    '    jekyll build</code></pre></div><p>Unless you specified the output path, the generated site files will be placed in folder <code data-backticks="1">_site</code>{: .filepath} of the project\'s root directory. Now you should upload those files to the target server.</p><h2>Upgrading</h2><p>It depends on how you use the theme:</p><ul><li><p>If you are using the theme gem (there will be <code data-backticks="1">gem "jekyll-theme-chirpy"</code> in the <code data-backticks="1">Gemfile</code>{: .filepath}), editing the <code data-backticks="1">Gemfile</code>{: .filepath} and update the version number of the theme gem, for example:</p><div data-language="diff" class="toastui-editor-ww-code-block-highlighting"><pre class="language-diff"><code data-language="diff" class="language-diff"><span class="token deleted-sign deleted prefix">-</span><span class="token deleted-sign deleted line"> gem "jekyll-theme-chirpy", "~&gt; 3.2", "&gt;= 3.2.1"\n' +
    '</span><span class="token inserted-sign inserted prefix">+</span><span class="token inserted-sign inserted line"> gem "jekyll-theme-chirpy", "~&gt; 3.3", "&gt;= 3.3.0"</span></code></pre></div><p>{: .nolineno file="Gemfile" }</p><p><br></p><p>And then execute the following command:</p><div data-language="console" class="toastui-editor-ww-code-block-highlighting"><pre class="language-console"><code data-language="console" class="language-console">$ bundle update jekyll-theme-chirpy</code></pre></div><p>As the version upgrades, the critical files (for details, see the [Startup Template][starter]) and configuration options will change. Please refer to the <a href="https://github.com/cotes2020/jekyll-theme-chirpy/wiki/Upgrade-Guide">Upgrade Guide</a> to keep your repo\'s files in sync with the latest version of the theme.</p></li><li><p>If you forked from the source project (there will be <code data-backticks="1">gemspec</code> in the <code data-backticks="1">Gemfile</code>{: .filepath} of your site), then merge the [latest upstream tags][latest-tag] into your Jekyll site to complete the upgrade.</p><p>The merge is likely to conflict with your local modifications. Please be patient and careful to resolve these conflicts.</p></li></ul><p>[starter]: https://github.com/cotes2020/chirpy-starter</p><p>[use-starter]: https://github.com/cotes2020/chirpy-starter/generate</p><p>[workflow]: https://github.com/cotes2020/jekyll-theme-chirpy/blob/master/.github/workflows/pages-deploy.yml.hook</p><p>[pages-workflow-src]: https://docs.github.com/en/pages/getting-started-with-github-pages/configuring-a-publishing-source-for-your-github-pages-site#publishing-with-a-custom-github-actions-workflow</p><p>[latest-tag]: https://github.com/cotes2020/jekyll-theme-chirpy/tags</p>';

  return (
    <div id="core-wrapper" className="col-12 col-lg-11 col-xl-9 pr-xl-4">
      <div className="post pl-1 pr-1 pl-md-2 pr-md-2">
        <h1 data-toc-skip="">Getting Started</h1>
        <div className="post-meta text-muted">
          <span> Posted <em className=""
                            data-toggle="tooltip"
                            data-placement="bottom"
                            data-original-title="Fri, Aug 9, 2019 9:55 PM" title="">Aug 9, 2019</em>
          </span>
          <span> Updated <em className=""
                             data-toggle="tooltip"
                             data-placement="bottom"
                             data-original-title="Tue, Jan 10, 2023 12:25 AM"
                             title="">Jan 10, 2023</em>
          </span>
          <div className="d-flex justify-content-between">
            <span> By <em> <a href="https://github.com/cotes2020/">Cotes Chung</a> </em> </span>
              <div>
                <span>
                  <em id="pv" className="pageviews">47,126</em> views
                </span>
                <span className="readtime" data-toggle="tooltip"
                      data-placement="bottom" title=""
                      data-original-title="1005 words"> <em>5 min</em> read
                </span>
              </div>
          </div>
        </div>
      </div>
      <div className="post-content">
        <Viewer initialValue={html}/>
      </div>
      <Comment/>
    </div>
  );
}